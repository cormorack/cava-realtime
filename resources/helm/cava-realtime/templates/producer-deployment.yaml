{{- $serviceName := printf "%s-producer" .Release.Name -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}
  labels:
    {{- include "cava-realtime.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "cava-realtime.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ $serviceName }}
  template:
    metadata:
      labels:
        {{- include "cava-realtime.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ $serviceName }}
    spec:
      {{- with .Values.producer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.producer.image.pullSecrets | nindent 8 }}
      restartPolicy: {{ .Values.producer.restartPolicy }}
      containers:
        - name: {{ $serviceName }}
          env:
            - name: CR_PRODUCER_KAFKA_HOST
              {{- if .Values.kafkaHost }}
              value: {{ .Values.kafkaHost | quote }}
              {{- else }}
              value: "{{ .Release.Name }}-kafka"
              {{- end }}
            - name: CR_PRODUCER_KAFKA_PORT
              {{- if .Values.kafkaPort }}
              value: {{ .Values.kafkaPort | quote }}
              {{- else }}
              value: "9092"
              {{- end }}
          {{- if .Values.producer.env }}
            {{- toYaml .Values.producer.env | nindent 12 }}
          {{- end }}
          image: "{{ .Values.producer.image.repository }}:{{ .Values.producer.image.tag }}"
          imagePullPolicy: {{ .Values.producer.image.pullPolicy }}
          resources:
            {{- toYaml .Values.producer.resources | nindent 12 }}
