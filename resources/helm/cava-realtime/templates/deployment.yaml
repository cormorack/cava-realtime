{{- $serviceName := default (include "cava-realtime.name" .) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceName }}
  labels:
    {{- include "cava-realtime.labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ $serviceName }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "cava-realtime.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ $serviceName }}
  template:
    metadata:
      labels:
        {{- include "cava-realtime.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ $serviceName }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      restartPolicy: {{ .Values.restartPolicy }}
      containers:
        - name: {{ $serviceName }}
          env:
            # === Gunicorn Settings Hardcoded here ======
            # Since fsspec doesn't support uvloop, defaults to asyncio for now ...
            - name: WORKER_CLASS
              value: "uvicorn.workers.UvicornH11Worker"
            # Defaults to 1 worker per core so it can be scaled via multiple pods ...
            # Set scaling with replicas of this pod
            - name: WORKERS_PER_CORE
              value: "1"
            - name: WEB_CONCURRENCY
              value: "1"
            - name: MAX_WORKERS
              value: "1" 
          {{- if .Values.env }}
            {{- toYaml .Values.env | nindent 12 }}
          {{- end }}
          {{- if .Values.development }}
          args: ["/start-reload.sh"]
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.service.containerPort }}
